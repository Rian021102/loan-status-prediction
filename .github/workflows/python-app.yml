name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  docker-compose-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: True
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker compose Build and Push
        run: |
          cd ./api
          docker-compose build --no-cache
          docker-compose push

  docker-pull-ec2:
    needs: docker-compose-build
    runs-on: ubuntu-latest
    steps:
      - name: Creating SSH Configuration File
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/deployment.pem
          chmod 600 ~/.ssh/deployment.pem
          cat >> ~/.ssh/config << END
          Host deploy_ec2
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deployment.pem
            StrictHostKeyChecking no
          END

      - name: Deploy to EC2
        run: |
          ssh deploy_ec2 "if [ -e temp/ ]; then rm -rf temp/; fi"
          ssh deploy_ec2 "rm -rf Smoker-Detection-Bio-Signs/"
          ssh deploy_ec2 "rm -rf ml_process_demo/"
          ssh deploy_ec2 "mkdir temp/"
          ssh deploy_ec2 "mkdir ml_process_demo/"
          ssh deploy_ec2 "git clone https://github.com/Rian021102/Smoker-Detection-Bio-Signs.git temp/"
          ssh deploy_ec2 "rsync -a ./temp/ ./ml_process_demo/"
          ssh deploy_ec2 "rm -rf temp/"
          ssh deploy_ec2 "cd ml_process_demo/ || sudo docker rmi rian021102/smoker-detection-api"
          ssh deploy_ec2 "cd ml_process_demo/API && sudo docker-compose pull && sudo docker-compose up -d"
